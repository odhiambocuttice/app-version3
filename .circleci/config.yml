version: 2.1
workflows:
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test-python-install:
          version: "3.4"
          requires:
            - build
      - test-python-install:
          version: "3.5"
          requires:
            - build
      - test-python-install:
          version: "3.6"
          requires:
            - build
      - test-python-install:
          version: "3.7"
          requires:
            - build
     
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      
      - run:
          name: install python dependencies
          command: |
           pip install --upgrade pip
           python3 -m venv dockerproject
           . dockerproject/bin/activate
           pip3 install -r requirements.txt
            
    
      - run:
          name: run tests
          command: |
           . dockerproject/bin/activate
           coverage run --source='.' manage.py test
           coverage report
      - store_artifacts:
          path: htmlcov/
  test-python-install:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      
      - run:
          name: install python dependencies
          command: |
            pip install --upgrade pip
            python3 -m venv dockerproject
            . dockerproject/bin/activate
            pip3 install -r requirements.txt
      
      - run:
          name: run tests
          command: |
           . dockerproject/bin/activate
           coverage run --source='.' manage.py test
           coverage report
     
      
  
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = odhiambocuttice" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            python setup.py sdist
      - run:
          name: upload to pypi
          command: |
            . dockerproject/bin/activate
            twine upload dist/*
